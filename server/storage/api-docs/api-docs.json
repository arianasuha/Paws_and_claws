{
    "openapi": "3.0.0",
    "info": {
        "title": "Paws and Claws API",
        "description": "API documentation for the Paws and Claws project",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local API Server"
        },
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Login user and return token with expiry.",
                "operationId": "c373bc4cffa4a56fc64e3979b8ee7b96",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "suha@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Laravel@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdefghijklmnopqrstuvwxyz"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "example": "2023-12-31 23:59:59"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "Credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "Logout user (revoke token).",
                "operationId": "5ff2dc8b48bff52908d3821a0ecc9b3e",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "You are not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get the authenticated user's cart",
                "description": "Retrieves all items in the authenticated user's shopping cart.",
                "operationId": "getCarts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Cart"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "Add a product to the cart",
                "description": "Adds a new product to the authenticated user's cart. If the product already exists, it updates the quantity.",
                "operationId": "createCartItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts/{cart}": {
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "Remove a cart item",
                "description": "Removes a specific product from the authenticated user's cart.",
                "operationId": "deleteCartItem",
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "description": "ID of the cart item to remove",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from cart successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Cart item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Carts"
                ],
                "summary": "Update a specific cart item",
                "description": "Updates the quantity of a specific cart item owned by the authenticated user.",
                "operationId": "updateCartItem",
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "description": "ID of the cart item to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts/clear": {
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "Clear all items from the cart",
                "description": "Deletes all products from the authenticated user's cart.",
                "operationId": "clearCart",
                "responses": {
                    "200": {
                        "description": "All items removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All items removed from cart."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a paginated list of orders",
                "operationId": "22d21713fd1e12635d9297e93c85a1ba",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderPaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "e4eaeb91ca9b88fed9f6a952cb660363",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a single order by ID",
                "operationId": "56013558ff3ad5d7cf47f83c80e80e9e",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "operationId": "cbb9a5cd8bba6212a822bf4294fb1801",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order deleted successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order",
                "operationId": "db8ace98eb9f8b14fba75cbe764c72f3",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/order-items": {
            "get": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Get list of all order items",
                "description": "Returns a paginated list of all order items.",
                "operationId": "8c152417c4567a5cd631c7b7efdb6263",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrderItem"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Create a new order item",
                "description": "Creates a new order item and returns the created item.",
                "operationId": "5cd4de14e95bc0ebafd2360b309e4d64",
                "requestBody": {
                    "description": "Order item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItemRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/order-items/{orderItem}": {
            "put": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Update an order item",
                "description": "Updates an existing order item and returns the updated item.",
                "operationId": "e64a9f3980ea6ceea955236473db5acb",
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "description": "ID of the order item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItemUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Delete an order item",
                "description": "Deletes an order item by its ID.",
                "operationId": "3129f3c5166cb340a8f25a6f6802184f",
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "description": "ID of the order item to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Order item not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pets": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get a list of all pets",
                "description": "Returns a paginated list of all pets. Requires authentication.",
                "operationId": "indexPets",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetPaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pets"
                ],
                "summary": "Create a new pet",
                "description": "Registers a new pet for the authenticated user.",
                "operationId": "createPet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "gender",
                                    "species",
                                    "dob"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ]
                                    },
                                    "species": {
                                        "type": "string"
                                    },
                                    "breed": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "image_url": {
                                        "description": "Pet's profile image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pets/{pet}": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get a single pet by ID",
                "description": "Returns a single pet by its ID. Requires authentication.",
                "operationId": "showPet",
                "parameters": [
                    {
                        "name": "pet",
                        "in": "path",
                        "description": "ID of the pet to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pets"
                ],
                "summary": "Delete a pet",
                "description": "Deletes an authenticated user's pet. Requires the user to be the owner of the pet.",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "pet",
                        "in": "path",
                        "description": "ID of the pet to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pet deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Pets"
                ],
                "summary": "Update a pet by ID",
                "description": "Updates an authenticated user's pet. Requires the user to be the owner of the pet.",
                "operationId": "updatePet",
                "parameters": [
                    {
                        "name": "pet",
                        "in": "path",
                        "description": "ID of the pet to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "nullable": true
                                    },
                                    "species": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "breed": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "image_url": {
                                        "description": "Pet's profile image file",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pet updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        },
                                        "pet": {
                                            "$ref": "#/components/schemas/Pet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pet-products": {
            "get": {
                "tags": [
                    "PetProducts"
                ],
                "summary": "Get a paginated list of pet products",
                "operationId": "8609b93915fc85b8426cdd904ce8d6ea",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetProductPaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PetProducts"
                ],
                "summary": "Create a new pet product (Admin only)",
                "operationId": "60d0e8115370129ba50c1002f70a230b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "stock"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dog Food"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A high-quality dog food for all breeds."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "25.50"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": "100"
                                    },
                                    "image_url": {
                                        "description": "Image file of the product",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetProduct"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have admin privileges"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pet-products/{id}": {
            "get": {
                "tags": [
                    "PetProducts"
                ],
                "summary": "Get a pet product by ID",
                "operationId": "2f929a0ab1bda2e19912874aeb00f392",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetProduct"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PetProducts"
                ],
                "summary": "Update an existing pet product (Admin only)",
                "operationId": "7cdbfae5d1ea3943275c1c8fb32fafa7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Dog Food Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "29.99"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": "150"
                                    },
                                    "image_url": {
                                        "description": "New image file of the product",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "description": "Method override for form submission",
                                        "type": "string",
                                        "example": "PATCH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetProduct"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PetProducts"
                ],
                "summary": "Delete a pet product (Admin only)",
                "operationId": "7983c2b94f933361aaee7543b3507c4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users (Admin only)",
                "description": "Returns a paginated list of all users. Requires admin privileges.",
                "operationId": "indexUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User registration payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user by ID or slug",
                "description": "Returns a single user by their ID or slug. Requires authentication. A user can view their own profile, but only an admin can view others.",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID or slug of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Deletes an authenticated user's account. Requires user to be authenticated and deleting their own account.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID or slug of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user by ID or slug",
                "description": "Updates an existing user. Requires authentication. A user can update their own profile, but only an admin can update others. Restricted fields like `is_admin` cannot be updated.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID or slug of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User update payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new admin user",
                "description": "Creates a new admin user account. Requires a specific auth mechanism not detailed here.",
                "operationId": "createAdminUser",
                "requestBody": {
                    "description": "Admin user registration payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin user created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/vets": {
            "get": {
                "tags": [
                    "Vets"
                ],
                "summary": "Get a list of all vet profiles",
                "description": "Returns a paginated list of vet profiles. Requires authentication and administrative privileges.",
                "operationId": "indexVets",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VetPaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vets"
                ],
                "summary": "Create a new vet profile",
                "description": "Registers a new user as a veterinarian and creates their vet profile.",
                "operationId": "createVet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VetRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vet profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Vet profile created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/vets/{userId}": {
            "get": {
                "tags": [
                    "Vets"
                ],
                "summary": "Get a single vet profile by user ID",
                "description": "Returns a single vet profile by its user ID. Requires authentication.",
                "operationId": "showVet",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user associated with the vet profile to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vet profile not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vets/{user}": {
            "delete": {
                "tags": [
                    "Vets"
                ],
                "summary": "Delete a vet profile by user ID or slug",
                "description": "Deletes a vet profile and the associated user. Requires the user to be the owner of the profile or an admin.",
                "operationId": "deleteVet",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID or slug of the user associated with the vet profile to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vet profile deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Vet profile not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Vets"
                ],
                "summary": "Update a vet profile by user ID or slug",
                "description": "Updates a vet profile. Requires the user to be the owner of the profile or an admin.",
                "operationId": "updateVet",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID or slug of the user associated with the vet profile to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VetUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vet profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Vet profile updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Vet profile not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "first_name": {
                        "description": "First name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Last name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "username": {
                        "description": "Username of the user",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "is_admin": {
                        "description": "Is the user an admin?",
                        "type": "boolean"
                    },
                    "is_active": {
                        "description": "Is the user active?",
                        "type": "boolean"
                    },
                    "is_vet": {
                        "description": "Is the user a veterinarian?",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserPaginatedResponse": {
                "title": "UserPaginatedResponse",
                "description": "Paginated list of users",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RegisterUserRequest": {
                "title": "RegisterUserRequest",
                "description": "User registration request payload",
                "required": [
                    "email",
                    "username",
                    "password"
                ],
                "properties": {
                    "first_name": {
                        "description": "First name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Last name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "username": {
                        "description": "Username of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password (min: 8 characters, confirmed)",
                        "type": "string",
                        "format": "password"
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password"
                    },
                    "address": {
                        "description": "Address of the user",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "UpdateUserRequest",
                "description": "User update request payload",
                "properties": {
                    "first_name": {
                        "description": "First name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Last name of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "username": {
                        "description": "Username of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "description": "Password (min: 8 characters, confirmed)",
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "address": {
                        "description": "Address of the user",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Pet": {
                "title": "Pet",
                "description": "Pet model",
                "properties": {
                    "id": {
                        "description": "Pet ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the pet's owner",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the pet",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender of the pet",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "species": {
                        "description": "Species of the pet",
                        "type": "string"
                    },
                    "breed": {
                        "description": "Breed of the pet",
                        "type": "string",
                        "nullable": true
                    },
                    "dob": {
                        "description": "Date of birth of the pet",
                        "type": "string",
                        "format": "date"
                    },
                    "image_url": {
                        "description": "URL to the pet's profile image",
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "description": "Height of the pet in cm",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "weight": {
                        "description": "Weight of the pet in kg",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PetPaginatedResponse": {
                "title": "PetPaginatedResponse",
                "description": "Paginated list of pets",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PetRegisterRequest": {
                "title": "PetRegisterRequest",
                "description": "Pet registration payload",
                "required": [
                    "name",
                    "gender",
                    "species",
                    "dob"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the pet",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender of the pet",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "species": {
                        "description": "Species of the pet",
                        "type": "string"
                    },
                    "breed": {
                        "description": "Breed of the pet",
                        "type": "string",
                        "nullable": true
                    },
                    "dob": {
                        "description": "Date of birth of the pet",
                        "type": "string",
                        "format": "date"
                    },
                    "image_url": {
                        "description": "Pet's profile image file",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "height": {
                        "description": "Height of the pet in cm",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "weight": {
                        "description": "Weight of the pet in kg",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PetUpdateRequest": {
                "title": "PetUpdateRequest",
                "description": "Pet update payload",
                "properties": {
                    "name": {
                        "description": "Name of the pet",
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "description": "Gender of the pet",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "nullable": true
                    },
                    "species": {
                        "description": "Species of the pet",
                        "type": "string",
                        "nullable": true
                    },
                    "breed": {
                        "description": "Breed of the pet",
                        "type": "string",
                        "nullable": true
                    },
                    "dob": {
                        "description": "Date of birth of the pet",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "image_url": {
                        "description": "Pet's profile image file",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "height": {
                        "description": "Height of the pet in cm",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "weight": {
                        "description": "Weight of the pet in kg",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Vet": {
                "title": "Vet",
                "description": "Vet model",
                "properties": {
                    "id": {
                        "description": "Vet ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the associated user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "clinic_name": {
                        "description": "Name of the vet's clinic",
                        "type": "string"
                    },
                    "specialization": {
                        "description": "Specialization of the vet",
                        "type": "string"
                    },
                    "services_offered": {
                        "description": "Description of services offered",
                        "type": "string",
                        "nullable": true
                    },
                    "working_hour": {
                        "description": "Working hours of the clinic",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "VetPaginatedResponse": {
                "title": "VetPaginatedResponse",
                "description": "Paginated list of vets",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vet"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "VetRegisterRequest": {
                "title": "VetRegisterRequest",
                "description": "Vet registration payload",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "username",
                    "password",
                    "clinic_name",
                    "specialization"
                ],
                "properties": {
                    "first_name": {
                        "description": "First name of the vet",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name of the vet",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the vet",
                        "type": "string",
                        "format": "email"
                    },
                    "username": {
                        "description": "Username of the vet",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password (min: 8 characters, confirmed)",
                        "type": "string",
                        "format": "password"
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password"
                    },
                    "address": {
                        "description": "Address of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "clinic_name": {
                        "description": "Name of the clinic",
                        "type": "string"
                    },
                    "specialization": {
                        "description": "Specialization of the vet",
                        "type": "string"
                    },
                    "services_offered": {
                        "description": "Description of services offered",
                        "type": "string",
                        "nullable": true
                    },
                    "working_hour": {
                        "description": "Working hours of the clinic",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "VetUpdateRequest": {
                "title": "VetUpdateRequest",
                "description": "Vet update payload",
                "properties": {
                    "first_name": {
                        "description": "First name of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Last name of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the vet",
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "username": {
                        "description": "Username of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "description": "Password (min: 8 characters, confirmed)",
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "address": {
                        "description": "Address of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "clinic_name": {
                        "description": "Name of the clinic",
                        "type": "string",
                        "nullable": true
                    },
                    "specialization": {
                        "description": "Specialization of the vet",
                        "type": "string",
                        "nullable": true
                    },
                    "services_offered": {
                        "description": "Description of services offered",
                        "type": "string",
                        "nullable": true
                    },
                    "working_hour": {
                        "description": "Working hours of the clinic",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PetProduct": {
                "title": "PetProduct",
                "description": "Pet product model",
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "stock": {
                        "description": "Current stock of the product",
                        "type": "integer"
                    },
                    "image_url": {
                        "description": "URL to the product image",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PetProductPaginatedResponse": {
                "title": "PetProductPaginatedResponse",
                "description": "Paginated list of pet products",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PetProduct"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PetProductStoreRequest": {
                "title": "PetProductStoreRequest",
                "description": "Payload for creating a new pet product",
                "required": [
                    "name",
                    "description",
                    "price",
                    "stock"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "stock": {
                        "description": "Current stock of the product",
                        "type": "integer"
                    },
                    "image_url": {
                        "description": "URL to the product image",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PetProductUpdateRequest": {
                "title": "PetProductUpdateRequest",
                "description": "Payload for updating an existing pet product",
                "properties": {
                    "name": {
                        "description": "Name of the product",
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "stock": {
                        "description": "Current stock of the product",
                        "type": "integer",
                        "nullable": true
                    },
                    "image_url": {
                        "description": "URL to the product image",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the user who owns the order",
                        "type": "integer",
                        "format": "int64"
                    },
                    "order_date": {
                        "description": "Date the order was placed",
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OrderPaginatedResponse": {
                "title": "OrderPaginatedResponse",
                "description": "Paginated list of orders",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrderRegisterRequest": {
                "title": "OrderRegisterRequest",
                "description": "Payload for creating a new order",
                "required": [
                    "status",
                    "total"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the order",
                        "type": "string"
                    },
                    "total": {
                        "description": "The total price of the order",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "OrderUpdateRequest": {
                "title": "OrderUpdateRequest",
                "description": "Payload for updating an existing order",
                "properties": {
                    "status": {
                        "description": "The new status of the order",
                        "type": "string",
                        "nullable": true
                    },
                    "total": {
                        "description": "The new total price of the order",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "Order Item model",
                "properties": {
                    "id": {
                        "description": "Order Item ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "order_id": {
                        "description": "ID of the associated order",
                        "type": "integer",
                        "format": "int64"
                    },
                    "product_id": {
                        "description": "ID of the associated product",
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrderItemRegisterRequest": {
                "title": "OrderItemRegisterRequest",
                "description": "Payload for creating a new order item",
                "required": [
                    "product_id",
                    "quantity"
                ],
                "properties": {
                    "product_id": {
                        "description": "ID of the product",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrderItemUpdateRequest": {
                "title": "OrderItemUpdateRequest",
                "description": "Payload for updating an existing order item",
                "properties": {
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Cart": {
                "title": "Cart",
                "description": "Cart model",
                "properties": {
                    "id": {
                        "description": "Cart ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the user who owns the cart",
                        "type": "integer",
                        "format": "int64"
                    },
                    "product_id": {
                        "description": "ID of the associated product",
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pet_product": {
                        "$ref": "#/components/schemas/PetProduct"
                    }
                },
                "type": "object"
            },
            "CartPaginatedResponse": {
                "title": "CartPaginatedResponse",
                "description": "Paginated list of cart items",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Cart"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CartStoreRequest": {
                "title": "CartStoreRequest",
                "description": "Payload for adding an item to the cart",
                "required": [
                    "product_id",
                    "quantity"
                ],
                "properties": {
                    "product_id": {
                        "description": "ID of the product to add",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Quantity of the product to add",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CartUpdateRequest": {
                "title": "CartUpdateRequest",
                "description": "Payload for updating a cart item",
                "required": [
                    "quantity"
                ],
                "properties": {
                    "quantity": {
                        "description": "New quantity for the cart item",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        },
        {
            "name": "Pets",
            "description": "API Endpoints of Pets"
        },
        {
            "name": "Vets",
            "description": "API Endpoints of Vets"
        },
        {
            "name": "PetProducts",
            "description": "API Endpoints for Pet Products"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for Orders"
        },
        {
            "name": "Order Items",
            "description": "API Endpoints for Order Items"
        },
        {
            "name": "Carts",
            "description": "API Endpoints for Carts"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}